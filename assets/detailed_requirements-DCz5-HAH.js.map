{"version":3,"file":"detailed_requirements-DCz5-HAH.js","sources":["../../../pages/specification/detailed_requirements.mdx"],"sourcesContent":["\r\n# 3. Detailed Requirements\r\n\r\n## 3.1 External Interface Requirements\r\n\r\n### 3.1.1 User Interfaces\r\n1. **Web interface** using **Nuxt.js**.\r\n2. **REST API** for interaction with the frontend.\r\n3. **JWT** for authentication and authorization.\r\n\r\n### 3.1.2 Hardware Interfaces\r\nThe application will run on a server with internet access.\r\n\r\n### 3.1.3 Software Interfaces\r\n1. **OpenAPI** for API documentation.\r\n2. **Zudoku** for viewing the API documentation.\r\n3. **Nuxt.js** for creating the client-side web application.\r\n\r\n### 3.1.4 Interaction Interfaces\r\n- Interaction between the client and server via **REST API**.\r\n- **JSON** format for data transmission.\r\n\r\n## 3.2 Functional Requirements\r\n\r\n1. **Registration and Authentication**:\r\n   - Users should be able to register and log in using **JWT**.\r\n\r\n2. **Order Management**:\r\n   - Admins can create, update, view, and delete orders.\r\n   - Couriers can accept orders and update their statuses.\r\n\r\n3. **Courier Management**:\r\n   - Admins can assign couriers to orders.\r\n\r\n## 3.3 Performance Requirements\r\n- API response time should be less than 1 second.\r\n- The system should support up to 1000 concurrent users.\r\n\r\n## 3.4 Design Constraints\r\n- Use of **Nuxt.js** for the frontend.\r\n- The server should be based on **Node.js**.\r\n- **OpenAPI** and **Zudoku** for API documentation.\r\n\r\n## 3.5 Non-functional Requirements\r\n- **Reliability**: The system should ensure 99.9% uptime.\r\n- **Security**: Authentication via **JWT**, protection against CSRF.\r\n- **Scalability**: The system should be scalable to accommodate growing user numbers.\r\n\r\n## 3.6 Other Requirements\r\n- Support for multiple languages.\r\n- Logging of user actions and errors.\r\n"],"names":["_jsx","_components"],"mappings":"oqCACE,SAAA;sDAEC,SAAA;uCAEC,SAAA;;yCACC,SAAA,eAAe,CAAA,EAAA,UAAAA,MAAAC,EAAA,OAAA,CAAS,SAAA,SAAS,CAAA,EAAA,GAAA;yCACjC,SAAA,UAAU,CAAA,EAAA,qCAAA;yCACV,SAAA,KAAK,CAAA,EAAA,wCAAA;;2CAEN,SAAA;aACJ,SAAA;2CAEI,SAAA;;yCACC,SAAA,SAAS,CAAA,EAAA,yBAAA;yCACT,SAAA,QAAQ,CAAA,EAAA,qCAAA;yCACR,SAAA,SAAS,CAAA,EAAA,gDAAA;;8CAEV,SAAA;;eACF,SAAA,CAAA,iDAAAD,MAAAC,EAAA,OAAA,CAAgD,SAAA,UAAU,CAAA,EAAA,GAAA;yCACxD,SAAA,MAAM,CAAA,EAAA,gCAAA;;8CAEP,SAAA;;;wCAEE,SAAA,iCAAiC,CAAA,EAAA,GAAA;;eACjC,SAAA,CAAA,qDAAAD,MAAAC,EAAA,OAAA,CAAoD,SAAA,KAAK,CAAA,EAAA,GAAA;;;;wCAEzD,SAAA,kBAAkB,CAAA,EAAA,GAAA;;cAClB,SAAA;cACA,SAAA;;;;wCAEA,SAAA,oBAAoB,CAAA,EAAA,GAAA;;cACpB,SAAA;;;;+CAEF,SAAA;;cACD,SAAA;cACA,SAAA;;yCAEC,SAAA;;eACD,SAAA,CAAA,UAAAD,MAAAC,EAAA,OAAA,CAAS,SAAA,SAAS,CAAA,EAAA,oBAAA;eAClB,SAAA,CAAA,iCAAAD,MAAAC,EAAA,OAAA,CAAgC,SAAA,SAAS,CAAA,EAAA,GAAA;yCACvC,SAAA,SAAS,CAAA,EAAA,QAAAD,MAAAC,EAAA,OAAA,CAAO,SAAA,QAAQ,CAAA,EAAA,yBAAA;;kDAEzB,SAAA;;yCACC,SAAA,aAAa,CAAA,EAAA,0CAAA;yCACb,SAAA,UAAU,CAAA,EAAA,wBAAAD,MAAAC,EAAA,OAAA,CAAuB,SAAA,KAAK,CAAA,EAAA,4BAAA;yCACtC,SAAA,aAAa,CAAA,EAAA,sEAAA;;yCAEd,SAAA;;cACD,SAAA;cACA,SAAA;"}