const t=Array.from({length:9},()=>({})),e={"#/components/schemas/UserRegistration":t[0],"#/components/schemas/User":t[1],"#/components/schemas/ErrorResponse":t[2],"#/components/schemas/LoginRequest":t[3],"#/components/schemas/LoginResponse":t[4],"#/components/schemas/Courier":t[5],"#/components/schemas/Order":t[6],"#/components/schemas/Store":t[7],"#/components/schemas/Product":t[8]},r=Object.keys(e);Object.assign(t[0],{type:"object",properties:{name:{type:"string"},email:{type:"string"},password:{type:"string"}}});Object.defineProperty(t[0],"__$ref",{value:r[0],enumerable:!1});Object.assign(t[1],{type:"object",properties:{id:{type:"string"},name:{type:"string"},email:{type:"string"},role:{type:"string",enum:["client","courier","admin"]},status:{type:"string",enum:["active","inactive","banned"]},createdAt:{type:"string",format:"date-time"}}});Object.defineProperty(t[1],"__$ref",{value:r[1],enumerable:!1});Object.assign(t[2],{type:"object",properties:{code:{type:"integer"},message:{type:"string"},details:{type:"string"}}});Object.defineProperty(t[2],"__$ref",{value:r[2],enumerable:!1});Object.assign(t[3],{type:"object",properties:{email:{type:"string"},password:{type:"string"}}});Object.defineProperty(t[3],"__$ref",{value:r[3],enumerable:!1});Object.assign(t[4],{type:"object",properties:{token:{type:"string"}}});Object.defineProperty(t[4],"__$ref",{value:r[4],enumerable:!1});Object.assign(t[5],{type:"object",properties:{id:{type:"string"},name:{type:"string"},deliveryHistory:{type:"array",items:{type:"object",properties:{orderId:{type:"string"},deliveredAt:{type:"string",format:"date-time"}}}},availability:{type:"boolean"},assignedOrders:{type:"array",items:{type:"string"}}}});Object.defineProperty(t[5],"__$ref",{value:r[5],enumerable:!1});Object.assign(t[6],{type:"object",properties:{orderId:{type:"string"},customerId:{type:"string"},storeId:{type:"string"},products:{type:"array",items:{type:"object",properties:{productId:{type:"string"},quantity:{type:"integer"}}}},createdAt:{type:"string",format:"date-time"}}});Object.defineProperty(t[6],"__$ref",{value:r[6],enumerable:!1});Object.assign(t[7],{type:"object",properties:{id:{type:"string"},name:{type:"string"},location:{type:"string"},products:{type:"array",items:{type:"string"}}}});Object.defineProperty(t[7],"__$ref",{value:r[7],enumerable:!1});Object.assign(t[8],{type:"object",properties:{id:{type:"string"},name:{type:"string"},price:{type:"number",format:"float"},description:{type:"string"},stock:{type:"integer"}}});Object.defineProperty(t[8],"__$ref",{value:r[8],enumerable:!1});const s={openapi:"3.1.1",info:{title:"Delivery Management API",description:"API for managing deliveries, users, couriers, stores, products, and admin operations.",version:"1.0.0"},servers:[{url:"http://localhost:3000/api",description:"Development server"}],tags:[{name:"Authentication",description:"Endpoints for user authentication and session management"},{name:"Users",description:"Endpoints for managing user information"},{name:"Couriers",description:"Endpoints for managing couriers and their availability"},{name:"Orders",description:"Endpoints for managing delivery orders"},{name:"Stores",description:"Endpoints for managing stores and products"},{name:"Admin",description:"Endpoints for admin management and operations"}],paths:{"/auth/register":{post:{summary:"Register a new user",operationId:"registerUser",tags:["Authentication"],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/UserRegistration"]}}},responses:{200:{description:"User registered successfully",content:{"application/json":{schema:e["#/components/schemas/User"]}}},400:{description:"Invalid input",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}},500:{description:"Internal Server Error",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/auth/login":{post:{summary:"User login",operationId:"loginUser",tags:["Authentication"],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/LoginRequest"]}}},responses:{200:{description:"Successfully logged in",content:{"application/json":{schema:e["#/components/schemas/LoginResponse"]}}},401:{description:"Unauthorized, invalid credentials",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/users/{userId}":{get:{summary:"Get user details",operationId:"getUser",tags:["Users"],parameters:[{name:"userId",in:"path",required:!0,description:"The ID of the user",schema:{type:"string"}}],responses:{200:{description:"User found",content:{"application/json":{schema:e["#/components/schemas/User"]}}},404:{description:"User not found",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/couriers":{get:{summary:"Get all couriers",operationId:"getAllCouriers",tags:["Couriers"],responses:{200:{description:"List of couriers",content:{"application/json":{schema:{type:"array",items:e["#/components/schemas/Courier"]}}}}}}},"/couriers/{courierId}":{get:{summary:"Get courier details",operationId:"getCourier",tags:["Couriers"],parameters:[{name:"courierId",in:"path",required:!0,description:"The ID of the courier",schema:{type:"string"}}],responses:{200:{description:"Courier found",content:{"application/json":{schema:e["#/components/schemas/Courier"]}}},404:{description:"Courier not found",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/orders":{post:{summary:"Create a new order",operationId:"createOrder",tags:["Orders"],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/Order"]}}},responses:{201:{description:"Order created successfully",content:{"application/json":{schema:e["#/components/schemas/Order"]}}},400:{description:"Invalid order details",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}},500:{description:"Internal Server Error",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/orders/user/{userId}":{get:{summary:"Get all orders by user",tags:["Orders"],parameters:[{name:"userId",in:"path",required:!0,schema:{type:"string"}}],responses:{200:{description:"User orders",content:{"application/json":{schema:{type:"array",items:e["#/components/schemas/Order"]}}}}}}},"/admin/orders/{orderId}":{put:{summary:"Admin modifies an order",operationId:"modifyOrder",tags:["Admin"],parameters:[{name:"orderId",in:"path",required:!0,description:"The ID of the order",schema:{type:"string"}}],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/Order"]}}},responses:{200:{description:"Order updated successfully",content:{"application/json":{schema:e["#/components/schemas/Order"]}}},400:{description:"Invalid order details",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}},404:{description:"Order not found",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}},500:{description:"Internal Server Error",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/stores":{get:{summary:"Get all stores",tags:["Stores"],responses:{200:{description:"List of stores",content:{"application/json":{schema:{type:"array",items:e["#/components/schemas/Store"]}}}}}},post:{summary:"Create a new store",operationId:"createStore",tags:["Stores"],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/Store"]}}},responses:{201:{description:"Store created successfully",content:{"application/json":{schema:e["#/components/schemas/Store"]}}},400:{description:"Invalid store details",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/stores/{storeId}":{get:{summary:"Get store by ID",tags:["Stores"],parameters:[{name:"storeId",in:"path",required:!0,schema:{type:"string"}}],responses:{200:{description:"Store found",content:{"application/json":{schema:e["#/components/schemas/Store"]}}},404:{description:"Store not found",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}},delete:{summary:"Delete store (admin only)",tags:["Admin"],parameters:[{name:"storeId",in:"path",required:!0,schema:{type:"string"}}],responses:{204:{description:"Store deleted"},403:{description:"Forbidden",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}},"/stores/{storeId}/products":{post:{summary:"Add a product to a store",operationId:"addProductToStore",tags:["Stores"],parameters:[{name:"storeId",in:"path",required:!0,description:"The ID of the store",schema:{type:"string"}}],requestBody:{required:!0,content:{"application/json":{schema:e["#/components/schemas/Product"]}}},responses:{201:{description:"Product added to store",content:{"application/json":{schema:e["#/components/schemas/Product"]}}},400:{description:"Invalid product details",content:{"application/json":{schema:e["#/components/schemas/ErrorResponse"]}}}}}}},components:{schemas:{User:{type:"object",properties:{id:{type:"string"},name:{type:"string"},email:{type:"string"},role:{type:"string",enum:["client","courier","admin"]},status:{type:"string",enum:["active","inactive","banned"]},createdAt:{type:"string",format:"date-time"}}},UserRegistration:{type:"object",properties:{name:{type:"string"},email:{type:"string"},password:{type:"string"}}},Courier:{type:"object",properties:{id:{type:"string"},name:{type:"string"},deliveryHistory:{type:"array",items:{type:"object",properties:{orderId:{type:"string"},deliveredAt:{type:"string",format:"date-time"}}}},availability:{type:"boolean"},assignedOrders:{type:"array",items:{type:"string"}}}},Order:{type:"object",properties:{orderId:{type:"string"},customerId:{type:"string"},storeId:{type:"string"},products:{type:"array",items:{type:"object",properties:{productId:{type:"string"},quantity:{type:"integer"}}}},createdAt:{type:"string",format:"date-time"}}},Product:{type:"object",properties:{id:{type:"string"},name:{type:"string"},price:{type:"number",format:"float"},description:{type:"string"},stock:{type:"integer"}}},Store:{type:"object",properties:{id:{type:"string"},name:{type:"string"},location:{type:"string"},products:{type:"array",items:{type:"string"}}}},LoginRequest:{type:"object",properties:{email:{type:"string"},password:{type:"string"}}},LoginResponse:{type:"object",properties:{token:{type:"string"}}},ErrorResponse:{type:"object",properties:{code:{type:"integer"},message:{type:"string"},details:{type:"string"}}}}}},o={operations:{"/auth/register-post-registerUser-Register a new user":"register-a-new-user","/auth/login-post-loginUser-User login":"user-login","/users/{userId}-get-getUser-Get user details":"get-user-details","/couriers-get-getAllCouriers-Get all couriers":"get-all-couriers","/couriers/{courierId}-get-getCourier-Get courier details":"get-courier-details","/orders-post-createOrder-Create a new order":"create-a-new-order","/orders/user/{userId}-get-Get all orders by user":"get-all-orders-by-user","/admin/orders/{orderId}-put-modifyOrder-Admin modifies an order":"admin-modifies-an-order","/stores-get-Get all stores":"get-all-stores","/stores-post-createStore-Create a new store":"create-a-new-store","/stores/{storeId}-get-Get store by ID":"get-store-by-id","/stores/{storeId}-delete-Delete store (admin only)":"delete-store-admin-only","/stores/{storeId}/products-post-addProductToStore-Add a product to a store":"add-a-product-to-a-store"},tags:{Authentication:"authentication",Users:"users",Couriers:"couriers",Orders:"orders",Admin:"admin",Stores:"stores"}};export{s as schema,o as slugs};
//# sourceMappingURL=openapi.yaml-B8kBSv1o.js.map
