{"version":3,"file":"general_description-BRH48UWD.js","sources":["../../pages/specification/general_description.mdx"],"sourcesContent":["\r\n# 2. General Description\r\n\r\n## 2.1 Interaction of the Product\r\nThe application will interact with clients (users), couriers, and administrators through various interfaces:\r\n- **Clients** will place orders and track them.\r\n- **Couriers** will accept orders and update statuses.\r\n- **Administrators** will manage users, couriers, and orders.\r\n\r\n## 2.2 Product Functions\r\n1. User registration and authentication.\r\n2. Managing delivery orders (create, view, update, delete).\r\n3. Managing couriers (assign couriers to orders).\r\n4. Displaying order and courier statistics.\r\n\r\n## 2.3 User Characteristics\r\nUsers will be of the following types:\r\n- **Clients** – can create orders and track them.\r\n- **Couriers** – can accept orders and update their statuses.\r\n- **Administrators** – can manage all aspects of the system, including users and orders.\r\n\r\n## 2.4 Constraints\r\n- The system should support both web and mobile versions of the application.\r\n- The implementation should use **Nuxt.js** for the frontend and **Node.js** for the backend.\r\n\r\n## 2.5 Assumptions and Dependencies\r\n- The system will be deployed on a **Node.js**-based server.\r\n- **JWT** will be used for authentication.\r\n\r\n"],"names":["_jsx","_components"],"mappings":"6yBACE,SAAA;iDAEC,SAAA;aACH,SAAA;;yCACI,SAAA,SAAS,CAAA,EAAA,oCAAA;yCACT,SAAA,UAAU,CAAA,EAAA,0CAAA;yCACV,SAAA,gBAAgB,CAAA,EAAA,2CAAA;;wCAEjB,SAAA;;cACA,SAAA;cACA,SAAA;cACA,SAAA;cACA,SAAA;;2CAEA,SAAA;aACH,SAAA;;yCACI,SAAA,SAAS,CAAA,EAAA,sCAAA;yCACT,SAAA,UAAU,CAAA,EAAA,iDAAA;yCACV,SAAA,gBAAgB,CAAA,EAAA,sEAAA;;kCAEjB,SAAA;;cACD,SAAA;eACA,SAAA,CAAA,iCAAAA,MAAAC,EAAA,OAAA,CAAgC,SAAA,SAAS,CAAA,EAAA,yBAAAD,MAAAC,EAAA,OAAA,CAAwB,SAAA,SAAS,CAAA,EAAA,mBAAA;;mDAEzE,SAAA;;eACD,SAAA,CAAA,oCAAAD,MAAAC,EAAA,OAAA,CAAmC,SAAA,SAAS,CAAA,EAAA,gBAAA;yCAC1C,SAAA,KAAK,CAAA,EAAA,mCAAA;"}